#===== Basic
# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-node-svc
# spec:
#   sessionAffinity: ClientIP
#   selector:
#     app: hello-node
#   ports:
#     - port: 80
#       protocol: TCP
#       targetPort: 8080
#     # - name: http
#     #   port: 80
#     #   protocol: TCP
#     #   targetPort: 8080
#     #   nodePort: 30036
#   type: LoadBalancer
#   #type: NodePort


#===== clusterIP: None
# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-node-svc-headless
# spec:
#   clusterIP: None
#   selector:
#     app: hello-node
#   ports:
#     - name: http
#       port: 80
#       protocol: TCP
#       targetPort: 8080


# == External 도메인 지정
# apiVersion: v1
# kind: Service
# metadata:
#   name: my-service
#   namespace: prod
# spec:
#   type: ExternalName
#   externalName: my.database.example.com


# == External IP (외부 IP) 지정
# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-node-svc
# spec:
#   selector:
#     app: hello-node
#   ports:
#     - name: http
#       port: 80
#       protocol: TCP
#       targetPort: 8080
#   externalIPs:
#   - 80.11.12.11


#===== 생성한 아이피로 연결
# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-node-svc
# spec:
#   selector:
#     app: hello-node
#   ports:
#     - name: http
#       port: 80
#       protocol: TCP
#       targetPort: 8080
#   type: LoadBalancer
#   loadBalancerIP: 35.243.88.109



#===== Ingress (users)
# apiVersion: v1
# kind: Service
# metadata:
#   name: users-node-svc
# spec:
#   selector:
#     app: users
#   ports:
#     - port: 80
#       protocol: TCP
#       targetPort: 8080
#   type: NodePort


#===== Ingress (products)
apiVersion: v1
kind: Service
metadata:
  name: products-node-svc
spec:
  selector:
    app: products
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  type: NodePort

